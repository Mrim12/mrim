import time
class Customer:
    def __init__(self, name):
        self.name = name
class MessagingSystem:
    def __init__(self):
        self.customers = []    
    def add_customer(self, customer):
        self.customers.append(customer)    
    def send_message(self, sender, receiver, message):
        print(f"{sender.name} sent a message to {receiver.name}: {message}")    
    def start_communication(self):
        while True:
            sender_name = input("Enter sender name (or 'exit' to quit): ")
            if sender_name == 'exit':
                break
            receiver_name = input("Enter receiver name: ")
            message = input("Enter message: ")
            
            sender = self.find_customer(sender_name)
            receiver = self.find_customer(receiver_name)
            
            if sender and receiver:
                self.send_message(sender, receiver, message)
            else:
                print("Invalid sender or receiver name. Try again.")
            
            time.sleep(1)  # Pause for 1 second between messages
            
    def find_customer(self, name):
        for customer in self.customers:
            if customer.name == name:
                return customer
        return None

# Create the messaging system
messaging_system = MessagingSystem()

# Create customers
customer1 = Customer("Alice")
customer2 = Customer("Bob")
customer3 = Customer("Charlie")

# Add customers to the messaging system
messaging_system.add_customer(customer1)
messaging_system.add_customer(customer2)
messaging_system.add_customer(customer3)

# Start the communication
messaging_system.start_communication()
